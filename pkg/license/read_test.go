package license

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestReadID(t *testing.T) {
	tests := []struct {
		path      string
		want      []byte
		assertion assert.ErrorAssertionFunc
	}{
		{
			path: "testdata/machine-id",
			want: []byte{
				0x9, 0xb7, 0xed, 0xfc, 0x96, 0x75, 0x4b, 0x2c,
				0xb1, 0x32, 0x2, 0x97, 0x94, 0xf3, 0x4d, 0x13,
			},
			assertion: assert.NoError,
		},
	}
	for _, tt := range tests {
		t.Run(tt.path, func(t *testing.T) {
			got, err := ReadID(tt.path)
			tt.assertion(t, err)
			assert.Equal(t, tt.want, got)
		})
	}
}

func TestReadKey(t *testing.T) {
	tests := []struct {
		path      string
		want      []byte
		assertion assert.ErrorAssertionFunc
	}{
		{
			path: "testdata/license.key",
			want: []byte{
				0xe7, 0xd4, 0xb5, 0x7c, 0x7b, 0x6e, 0xc0, 0xa9,
				0x5c, 0x88, 0xbb, 0x60, 0x41, 0x5b, 0xf8, 0x96,
				0xe6, 0x7e, 0x88, 0x0f, 0xc9, 0x56, 0x94, 0x82,
				0x71, 0x10, 0xeb, 0xd9, 0xdc, 0x03, 0x34, 0x31,
			},
			assertion: assert.NoError,
		},
		{
			path: "testdata/license_padded.key",
			want: []byte{
				0xde, 0x12, 0x75, 0xe3, 0xf8, 0x9c, 0xfa, 0xe0,
				0xa6, 0x0a, 0x78, 0x85, 0x26, 0x1b, 0x02, 0x34,
				0x51, 0x13, 0x89, 0x6d, 0x7d, 0x5d, 0xa7, 0x50,
				0x1d, 0xf8, 0x9b, 0x8b, 0x3b, 0xab, 0xc5, 0x95,
			},
			assertion: assert.NoError,
		},
	}
	for _, tt := range tests {
		t.Run(tt.path, func(t *testing.T) {
			got, err := ReadKey(tt.path)
			tt.assertion(t, err)
			assert.Equal(t, tt.want, got)
		})
	}
}
